<?xml version="1.0" encoding="utf-8"?>
<mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:zx="http://www.joshtynjala.com/2006/mxml"
	layout="vertical"
	creationComplete="creationCompleteHandler(event)">
	
	<!-- A TreeMap component displaying some sample data. The label value
		comes from the "name" attribute in the XML, the weight value
		comes from the "value" attribute, and the color value comes from the
		"color" attribute. -->
		
	<zx:TreeMap id="map" width="100%" height="100%"
			dataProvider="{sampleData}"
			labelField="@name"
			weightField="@value"
			colorField="@color"/>
			
	<!-- Some XML containing sample data to display in the TreeMap component. 
		It contains built-in label and weight values. However, it does not
		contain color values. We'll be building those ourselves. -->
		
	<mx:XML id="sampleData">
		<videoGames>
			<company name="Nintendo" value="4">
				<type name="Consoles" value="2">
					<system name="GameCube" value="1"/>
					<system name="Wii" value="1"/>
				</type>
				<type name="Handheld" value="2">
					<system name="Game Boy Advance" value="1"/>
					<system name="Nintendo DS" value="1"/>
				</type>
			</company>
			<company name="Sony" value="3">
				<type name="Consoles" value="2">
					<system name="PlayStation 2" value="1"/>
					<system name="PlayStation 3" value="1"/>
				</type>
				<type name="Handheld" value="1">
					<system name="PSP" value="1"/>
				</type>
			</company>
			<company name="Microsoft" value="2">
				<type name="Consoles" value="2">
					<system name="XBOX" value="1"/>
					<system name="XBOX 360" value="1"/>
				</type>
			</company>
		</videoGames>
	</mx:XML>
	
	<!-- The available colors for the different types of video game systems. -->
	
	<mx:Array id="colors">
		<mx:Number>0x990000</mx:Number>
		<mx:Number>0x000099</mx:Number>
	</mx:Array>
	
	<!-- The file "treemap.css" is included in the component swc.
		It's best to include it for most projects. -->
		
	<mx:Style source="treemap.css"/>
	
	<mx:Script>
		<![CDATA[
		
			/**
			 * Called when the application has been created. Sets the color
			 * for each item to be displayed on the treemap.
			 */
			private function creationCompleteHandler(event:Event):void
			{
				// first determine all the different video game system types.
				var typesList:XMLList = this.sampleData..type.@name;
				// convert the xml list of names into an array.
				var types:Array = this.xmlListToArray(typesList);
				// rebuild the array so that it only contains unique items.
				types = this.buildUniqueArray(types);
				
				for(var i:int = 0; i < types.length; i++)
				{
					var currentType:String = types[i];
					var color:uint = this.colors[i];
					
					// for each type, get a list of systems and set the color.
					var leaves:XMLList = this.sampleData..type.(@name == currentType).system;
					for(var j:int = 0; j < leaves.length(); j++)
					{
						// set the missing "color" attribute
						leaves[j].@color = color;
					}
				}
			}
		
			/**
			 * Convert an XMLList into an Array. Best when the list only contains text nodes.
			 */
			private function xmlListToArray(list:XMLList):Array
			{
				var array:Array = [];
				for(var i:int = 0; i < list.length(); i++)
				{
					array.push(list[i]);
				}
				return array;
			}
		
			/**
			 * Rebuild an array so that it contains only unique items.
			 * @author Senocular (http://www.senocular.com/flash/actionscript.php?file=ActionScript_1.0/Prototypes/Array/unique.as)
			 */
			private function buildUniqueArray(original:Array):Array
			{
				var z:int = original.length;
				var y:int = original.length;
				var c:Boolean = false;
				var copy:Array = [];
				while(y--)
				{
					z = 0;
					while(z<y)
					{
						if(original[y] == original[z]){
							c = true;
							break;
						}
						z++;
					}
					if(!c)
					{
						copy[copy.length] = original[y];
					}
					else c = false;
				}
				return copy;
			}
		]]>
	</mx:Script>
	
</mx:Application>
