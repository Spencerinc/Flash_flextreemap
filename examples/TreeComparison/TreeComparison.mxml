<?xml version="1.0" encoding="utf-8"?>
<mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:zx="http://www.joshtynjala.com/2006/mxml"
	layout="vertical"
	horizontalAlign="center"
	creationComplete="expandTreeItems()">
	
	<mx:HBox width="640" height="480">
	
		<!-- Disable selection, set the data provider, and specify the "name"
			attribute in the data to display in the item labels. -->
			
		<mx:Tree id="tree" width="100%" height="100%"
			selectable="false"
			dataProvider="{sampleData}"
			labelField="@name"/>
			
		
		<!-- Give the top-level treemap its own style, set the data provider,
			specify the "name" attribute in the data to display in the node
			labels, and determine the node weight inside the "getItemWeight"
			function which is defined below. -->
			
		<zx:TreeMap id="map" width="100%" height="100%"
			styleName="TopLevel"
			dataProvider="{sampleData}"
			labelField="@name"
			weightFunction="{getItemWeight}"/>
			
	</mx:HBox>
	
	<!-- An XMLList of sample data to display in both the Tree and TreeMap
		components. -->
		
	<mx:XMLList id="sampleData" xmlns="">
		<branch name="Nintendo">
			<branch name="Consoles">
				<leaf name="GameCube" value="1"/>
				<leaf name="Wii" value="1"/>
			</branch>
			<branch name="Handheld">
				<leaf name="Game Boy Advance" value="1"/>
				<leaf name="Nintendo DS" value="1"/>
			</branch>
		</branch>
		<branch name="Sony">
			<branch name="Consoles">
				<leaf name="PlayStation 2" value="1"/>
				<leaf name="PlayStation 3" value="1"/>
			</branch>
			<branch name="Handheld">
				<leaf name="PSP" value="1"/>
			</branch>
		</branch>
		<branch name="Microsoft">
			<leaf name="XBOX" value="1"/>
			<leaf name="XBOX 360" value="1"/>
		</branch>
	</mx:XMLList>
	
	<!-- The file "treemap.css" is included in the component swc.
		It's best to include it for most projects. -->
	
	<mx:Style source="treemap.css"/>

	<mx:Style>
		.TopLevel
		{
			paddingLeft: 0;
			paddingRight: 0;
			paddingTop: 0;
			paddingBottom: 0;
		}
		
		TreeMap
		{
			paddingLeft: 2;
			paddingRight: 2;
			paddingTop: 2;
			paddingBottom: 2;
		}
		
		TreeMapNodeRenderer
		{
			focusAlpha: 0;
		}
	</mx:Style>
	
	<mx:Script>
		<![CDATA[
			
			/**
			 * When the application's creationComplete event fires, we expand
			 * all of the Tree's items so that the user can see all of the data.
			 */
			private function expandTreeItems():void
			{
				for(var i:int = 0; i < sampleData.length(); i++)
				{
					var item:Object = sampleData[i];
					
					// data descriptors provide a useful way to differentiate
					// branches and regular items.
					if(this.tree.dataDescriptor.isBranch(item))
					{
						this.tree.expandChildrenOf(item, true);
					}
				}
			}
			
			/**
			 * Determine the weight of a particular node in the treemap.
			 * Note: this is probably the most common way to determine node
			 * weights. More advanced solutions may exist that will produce
			 * optimized results.
			 */
			private function getItemWeight(item:Object):Number
			{
				var weight:Number = 0;
				
				if(this.map.dataDescriptor.isBranch(item))
				{
					// if the current node is a branch, the weight is determined
					// by the sum if the weights of its child nodes.
					
					var elements:XMLList = item.elements();
					for(var i:int = 0; i < elements.length(); i++)
					{
						var temp:Number = this.getItemWeight(elements[i]);
						weight += temp;
					}
				}
				else
				{
					// if the current node is not a branch, the weight is
					// determined by the "value" attribute.
					weight = item.@value;
				}
				return weight;
			}
		]]>
	</mx:Script>
</mx:Application>